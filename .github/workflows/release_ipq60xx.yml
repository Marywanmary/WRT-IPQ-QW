# IPQ60XX芯片平台固件构建工作流
name: IPQ60XX芯片固件构建

on:
  # 手动触发构建
  workflow_dispatch:
    inputs:
      release:
        description: '发布到Release'
        type: boolean
        default: true
      clean_disk:
        description: '清理磁盘空间'
        type: boolean
        default: true
  # 定时自动构建（每周一凌晨2点）
  schedule:
    - cron: '0 2 * * 1'

# 环境变量定义
env:
  CHIP_PLATFORM: ipq60xx                    # 芯片平台变量，便于后续修改
  REPO_DIR: openwrt                         # 源码目录
  ARTIFACTS_DIR: /tmp/artifacts             # 产物临时目录
  BUILD_LOG: build.log                      # 构建日志文件
  ERROR_LOG: error.log                      # 错误日志文件

# 工作流任务定义
jobs:
  # 准备阶段：设置构建矩阵
  prepare:
    name: 准备构建环境
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 清理磁盘空间
        if: github.event.inputs.clean_disk == 'true' || github.event_name == 'schedule'
        run: |
          echo "开始清理磁盘空间..."
          # 忽略错误继续执行
          sudo apt-get remove -y '^php.*' || true
          sudo apt-get autoremove -y || true
          sudo apt-get autoclean || true
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /usr/local/share/powershell || true
          echo "磁盘空间清理完成"

      - name: 设置构建矩阵
        id: set-matrix
        run: |
          # 按照Ultra->Max->Pro的顺序构建，便于缓存命中
          MATRIX_JSON='{"branch":["immwrt","openwrt","libwrt"],"config":["Ultra","Max","Pro"]}'
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  # 构建阶段：执行实际的固件编译
  build:
    name: 构建 (${{ matrix.branch }}-${{ matrix.config }})
    needs: prepare
    runs-on: ubuntu-22.04
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
      fail-fast: false                      # 单个失败不影响其他构建
      max-parallel: 3                       # 最大并发数限制

    steps:
      # ... 其余步骤保持不变 ...
